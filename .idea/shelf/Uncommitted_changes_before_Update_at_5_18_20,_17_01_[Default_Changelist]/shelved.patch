Index: src/Controller/ShopApi/CartController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace App\\Controller\\ShopApi;\n\nuse App\\Model\\APIResponse;\nuse App\\Entity\\Order\\Order;\nuse App\\Entity\\User\\ShopUser;\nuse Sylius\\Component\\Core\\Model\\OrderInterface;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse FOS\\RestBundle\\Controller\\Annotations\\Route;\nuse FOS\\RestBundle\\Controller\\AbstractFOSRestController;\nuse Sylius\\Bundle\\OrderBundle\\Doctrine\\ORM\\OrderRepository;\n\n/**\n * CartController\n * @Route(\"/sync-carts\")\n */\nclass CartController extends AbstractFOSRestController\n{\n    /**\n     * @var OrderRepository\n     */\n    private $repository;\n\n    /**\n     * CartController constructor.\n     * @param OrderRepository $repository\n     */\n    public function __construct(OrderRepository $repository)\n    {\n        $this->repository = $repository;\n    }\n\n    /**\n     * @Route(\n     *     \".{_format}\",\n     *     name=\"shop_api_get_carts\",\n     *     methods={\"GET\"}\n     * )\n     *\n     * @return Response\n     */\n    public function indexAction()\n    {\n        $list = [];\n        $statusCode = Response::HTTP_OK;\n\n        /** @var ShopUser $user */\n        $user = $this->getUser();\n\n        /** @var Order[] $orders */\n        $orders = $this->repository\n            ->createQueryBuilder('o')\n            ->andWhere('o.customer = :customer')\n            ->andWhere('o.tokenValue IS NOT NULL')\n            ->andWhere('o.state = :state')\n            ->setParameter('customer', $user->getCustomer())\n            ->setParameter('state', OrderInterface::STATE_CART)\n            ->getQuery()\n            ->getResult();\n\n        foreach ($orders as $order) {\n            $list[] = [\n                'id' => $order->getId(),\n                'number' => $order->getNumber(),\n                'token_value' => $order->getTokenValue(),\n            ];\n        }\n\n        $response = new APIResponse($statusCode, APIResponse::TYPE_INFO, 'Cart list', $list);\n        $view = $this->view($response, $statusCode);\n\n        return $this->handleView($view);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Controller/ShopApi/CartController.php	(revision d0822bec0d047161dd13b3f706ea70d777598fa4)
+++ src/Controller/ShopApi/CartController.php	(date 1589821516794)
@@ -72,4 +72,6 @@
 
         return $this->handleView($view);
     }
+
+    // TODO: Hacer un API de merge de carritos disponibles
 }
