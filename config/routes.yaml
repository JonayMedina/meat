hwi_oauth_redirect:
    resource: "@HWIOAuthBundle/Resources/config/routing/redirect.xml"
    prefix: /connect

hwi_oauth_connect:
    resource: "@HWIOAuthBundle/Resources/config/routing/connect.xml"
    prefix: /connect

hwi_oauth_login:
    resource: "@HWIOAuthBundle/Resources/config/routing/login.xml"
    prefix: /login

facebook:
    path: /login/check-facebook

meathouse_admin:
    resource: "Controller/Admin"
    type:     annotation
    prefix:   /admin
    
meathouse_frontend:
    resource: "Controller/Frontend"
    type:     annotation
    prefix:   /store
    
meathouse_admin_api:
    resource: "Controller/AdminApi"
    type:     annotation
    prefix:   /api/v{version}
    defaults:
      _format: json
      
meathouse_shop_api:
    resource: "Controller/ShopApi"
    type:     annotation
    prefix:   /shop-api
    defaults:
        _format: json
        
sylius_shop_api_add_coupon_to_cart:
    path: /shop-api/carts/{token}/coupon
    methods: [PUT]
    defaults:
        _controller: app.shop_api.cart:addCouponAction
      
meathouse_frontend_api:
    resource: "Controller/FrontendApi"
    type:     annotation
    prefix:   /store/api/v{version}
    defaults:
        _format: json
      
user_favorites:
    path: /account/favorites
    methods: [GET]
    defaults:
        _controller: app.controller.shop.extender:favoritesAction

user_changed_password:
    path: /account/changed-password
    methods: [GET]
    defaults:
        _controller: app.controller.shop.extender:changedPassword
        
user_billing:
    path: /account/billing
    methods: [GET, POST]
    defaults:
        _controller: app.controller.shop.extender:updateBillingAction
        
user_change_email:
    path: /account/change-email
    methods: [GET, POST]
    defaults:
        _controller: app.controller.shop.extender:changeEmailAction

sylius_shop_login:
    path: /store/login
    methods: [GET]
    defaults:
        _controller: sylius.controller.security:loginAction
        _sylius:
            template: "@SyliusShop/login.html.twig"
            logged_in_route: sylius_shop_homepage
        
sylius_shop_new_password:
    path: /store/new-login
    methods: [GET]
    defaults:
        _controller: sylius.controller.security:loginAction
        _sylius:
            template: "/frontend/newLogin.html.twig"
            logged_in_route: sylius_shop_homepage
            
sylius_shop_register_to_checkout:
    path: /store/register
    methods: [GET, POST]
    defaults:
        _controller: sylius.controller.customer:createAction
        _sylius:
            template: "@SyliusShop/register.html.twig"
            form: Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerRegistrationType
            event: register
            redirect: sylius_shop_checkout_start
    
sylius_shop_register:
    path: /register
    methods: [GET, POST]
    defaults:
        _controller: sylius.controller.customer:createAction
        _sylius:
            template: "@SyliusShop/register.html.twig"
            form: Sylius\Bundle\CoreBundle\Form\Type\Customer\CustomerRegistrationType
            event: register
            redirect: store_welcome
            flash: sylius.customer.register
            
sylius_shop_request_password_reset_token:
    path: /forgotten-password
    methods: [GET, POST]
    defaults:
        _controller: sylius.controller.shop_user:requestPasswordResetTokenAction
        _sylius:
            template: "@SyliusShop/Account/requestPasswordReset.html.twig"
            redirect: store_set_token

sylius_shop_password_reset:
    path: /forgotten-password/{token}
    methods: [GET, POST]
    defaults:
        _controller: sylius.controller.shop_user:resetPasswordAction
        _sylius:
            template: "@SyliusShop/Account/resetPassword.html.twig"
            redirect: sylius_shop_new_password
    
sylius_shop_account_change_password:
    path: /account/change-password
    methods: [GET, POST]
    defaults:
        _controller: sylius.controller.shop_user:changePasswordAction
        _sylius:
            template: "@SyliusShop/Account/changePassword.html.twig"
            redirect: user_changed_password
            
sylius_shop_account_profile_update:
    path: /account/profile/edit
    methods: [GET, PUT]
    defaults:
        _controller: app.controller.shop.extender:updateCustomerAction
        
sylius_shop_checkout_start:
    path: /checkout
    methods: [GET]
    defaults:
#        _controller: FrameworkBundle:Redirect:redirect
        _controller: app.controller.shop.extender:redirectToCheckoutAddress
        route: sylius_shop_checkout_address
                
sylius_shop_checkout_address:
    path: /checkout/address
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.order:updateAction
        _sylius:
            event: address
            flash: false
            template: "@SyliusShop/Checkout/address.html.twig"
            form:
                type: Sylius\Bundle\CoreBundle\Form\Type\Checkout\AddressType
                options:
                    customer: expr:service('sylius.context.customer').getCustomer()
                    validation_groups: ['app_address']
            repository:
                method: findCartForAddressing
                arguments:
                    - "expr:service('sylius.context.cart').getCart().getId()"
            state_machine:
                graph: sylius_order_checkout
                transition: address
            redirect: sylius_shop_checkout_billing
                
sylius_shop_checkout_billing:
    path: /checkout/billing
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.order:billingAction
        _sylius:
            event: address
            flash: false
            template: "@SyliusShop/Checkout/billing.html.twig"
            form:
                type: App\Form\Shop\BillingCheckoutType
                options:
                    validation_groups: ['app_billing']
            repository:
                method: findCartForAddressing
                arguments:
                    - "expr:service('sylius.context.cart').getCart().getId()"
            state_machine:
                graph: sylius_order_checkout
                transition: skip_shipping
            redirect: sylius_shop_checkout_select_payment
            
sylius_shop_checkout_select_payment:
    path: /checkout/select-payment
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.order:paymentAction
        _sylius:
            event: payment
            flash: false
            template: "@SyliusShop/Checkout/selectPayment.html.twig"
            form: App\Form\Shop\PaymentCardCheckoutType
            repository:
                method: findCartForSelectingPayment
                arguments:
                    - "expr:service('sylius.context.cart').getCart().getId()"
            state_machine:
                graph: sylius_order_checkout
                transition: select_payment
                
sylius_shop_checkout_complete:
    path: /checkout/complete
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.order:completeAction
        _sylius:
            event: complete
            flash: false
            template: "@SyliusShop/Checkout/complete.html.twig"
            repository:
                method: findCartForSummary
                arguments:
                    - "expr:service('sylius.context.cart').getCart().getId()"
            state_machine:
                graph: sylius_order_checkout
                transition: complete
            redirect:
                route: sylius_shop_order_pay
                parameters:
                    tokenValue: resource.tokenValue
            form:
                type: Sylius\Bundle\CoreBundle\Form\Type\Checkout\CompleteType
                options:
                    validation_groups: 'sylius_checkout_complete'
                
sylius_shop_cart_save:
    path: /cart
    methods: [PUT, PATCH]
    defaults:
        _controller: sylius.controller.order:saveAction
        _sylius:
            template: "@SyliusShop/Cart/summary.html.twig"
            redirect: sylius_shop_cart_summary
            form: 
                type: Sylius\Bundle\OrderBundle\Form\Type\CartType
                options:
                    validation_groups: ['app_cart']
            flash: sylius.cart.save
